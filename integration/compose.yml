version: '3.3'
services:
  postgres-container:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: your_password
    ports:
      - 5432:5432
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 5
      start_period: 30s
      # psql -h localhost -p 5432 -U postgres
  end:
    image: sixwaaaay/end:0.25.5
    restart: always
    ports:
      - 5151:5151
    environment:
      ConnectionStrings__Default: "Host=postgres-container;Username=postgres;Password=your_password"
      ConnectionStrings__ReplicationConnection: "Host=postgres-container;Username=postgres;Password=your_password"
      Application__Secret: "the secret key|the secret key|the secret key"
      ASPNETCORE_URLS: "http://+:5151"
    depends_on:
      postgres-container:
        condition: service_healthy
  meilisearch:
    image: getmeili/meilisearch:v1.15
    environment:
      MEILI_MASTER_KEY: masterKey|masterKey|masterKey|masterKey
    ports:
      - 7700:7700
  qdrant:
    image: qdrant/qdrant:v1.15
    environment:
      QDRANT__SERVICE__API_KEY: qdrant|qdrant|qdrant|qdrant|qdrant|qdrant
    ports:
      - 6333:6333
  valkey:
    image: valkey/valkey:8-alpine3.22 # redis alternative
    ports:
      - 6379:6379
  content:
    image: sixwaaaay/content:latest
    ports:
      - 5000:5000
    environment:
      ConnectionStrings__Default: "Host=postgres-container;Username=postgres;Password=your_password"
      ConnectionStrings__User: "http://end:5151"
      ConnectionStrings__Vote: "http://end:5151"
      ConnectionStrings__Search: "http://meilisearch:7700"
      ConnectionStrings__Redis: "valkey:6379"
      ConnectionStrings__QdrantUrl: "http://qdrant:6334"
      ConnectionStrings__QdrantApiKey: "qdrant|qdrant|qdrant|qdrant|qdrant|qdrant"
      Secret: "the secret key|the secret key|the secret key"
      Token: "masterKey|masterKey|masterKey|masterKey"
  bunserver:
    image: oven/bun:1
    command: "bun embeddingserver.ts"
    ports:
      - "8000:8000"
    volumes:
      - ./embeddingserver.ts:/app/embeddingserver.ts
    working_dir: /app
    restart: always
